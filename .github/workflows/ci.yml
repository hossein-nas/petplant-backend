name: PetPlant CI/CD Pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    name: Build and Push Docker image
    runs-on: ubuntu-latest
    environment: production
    outputs:
      image_tag: ${{ github.sha }}
      docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/pet-plant-backend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/pet-plant-backend:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build
    environment: production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      # --- This is the new, single scp step ---
      # It copies the entire 'deployment' directory into '~/petplant' on the server.
      - name: Copy deployment directory to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: 'deployment'
          target: '~/petplant'

      # --- This script is updated to work from the nested directory ---
      - name: SSH and Run Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Change directory into the nested folder where the compose file is.
            cd ~/petplant/deployment

            export BACKEND_IMAGE_TAG=${{ needs.build.outputs.image_tag }}
            export DOCKERHUB_USERNAME=${{ needs.build.outputs.docker_username }}
            echo "--- Verifying environment variables ---"
            env | grep DOCKER
            echo "--- Pulling new images ---"
            docker compose pull
            echo "--- Starting services ---"
            docker compose up -d
            echo "--- Cleaning up old images ---"
            docker image prune -af
